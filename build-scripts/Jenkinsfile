pipeline{
  agent {
        label 'server'
  }
  tools{
      gradle "gradle-7"
  }
  environment{
      JAVA_HOME = '/usr/lib/jvm/java-17-openjdk-amd64'
  }
    stages{
        stage ('Checkout'){
            steps{
                cleanWs()
                sh "echo $JAVA_HOME"
                sh "git clone https://github.com/alquama00s/link_shrink.git ."
                sh "ls -la"
            }
        }
        // stage('Test'){
        //     steps{
        //         sh 'mvn clean test'
        //         sh 'mvn jacoco:report'
        //         discoverReferenceBuild()
        //         recordCoverage(
        //                 tools: [[parser: 'JACOCO']],
        //                 sourceDirectories: [[path: 'target/site/jacoco/jacoco.xml']]
        //         )
        //         junit(
        //                 allowEmptyResults: true,
        //                 testResults: '**/**/*.xml'
        //         )

        //     }
        // }
        stage('Build'){
            steps{
                nodejs(nodeJSInstallationName: 'NodeJS24') {
                    sh 'bash build-scripts/build.sh'
                }
                sh "docker rmi -f \$(docker images -q) || echo 'some problems deleting image...'"
                sh "bash build-scripts/buildImages.sh 3.0.$BUILD_NUMBER"
                sh "docker image ls"
                sh "bash build-scripts/loadImages.sh"
            }
        }
        // stage('Deploy'){
        //     steps{
        //         echo 'Deploying....'
        //         sh "cp target/app.jar /App/"
        //         sh "sudo systemctl restart MavenApp"
        //     }
        // }
    }
}